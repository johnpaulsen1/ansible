- set_fact:
    vlan: lan
    cacheable: yes
  when:
    - ansible_default_ipv4['address'] is search( item )
  with_items:
    - '^192.168.12(1|2).'
    - '^172.28.7.5(0|1).'
    - '^10.5.(21|27|32|33).'
    - '10.5.7.2'
    - '^10.33.'
    - '^10.'

- set_fact:
    vlan: pci
    cacheable: yes
  when:
    - ansible_default_ipv4['address'] is search( item )
  with_items:
    - '^172.16.21.'
    - '^172.22.1.'

- set_fact:
    vlan: dmz
    cacheable: yes
  when:
    - ansible_default_ipv4['address'] is search( item )
  with_items:
    - '^10.5.30.(0|9|11)'
    - '^192.168.168.162'
    - '^172.20.'
    - '^172.(16|22).(1|21).'
    - '^10.33.46.'
    - '^10.5.(7|8|10|11|16|17|19|23|24|31|38|41|56|59).'
    - '^172.'

- debug:
    msg: "Server in LAN"
  when: vlan == "lan"

- debug:
    msg: "Server in DMZ"
  when: vlan == "dmz"

- debug:
    msg: "Server in PCI"
  when: vlan == "pci"

  #### Check if port is open DMZ
- block:
   - name: check port for a DMZ host
     wait_for:
       host: 172.20.25.141
       port: 80
       state: started
       delay: 0
       timeout: 3
     when: vlan == "dmz"
     ignore_errors: yes
     register: dmz_result

- debug:
    var: dmz_result

- debug:
    msg: "DMZ connectivity working"
  ignore_errors: yes
  when: dmz_result['state'] == "started"

- set_fact:
    dmz_ip_reachable: true
  when: dmz_result['state'] == "started"

### Check port LAN
- block:
  - name: check port for a LAN host
    wait_for:
      host: 10.33.205.169
      port: 80
      state: started
      delay: 0
      timeout: 3
    when: vlan == "lan"
    ignore_errors: yes
    register: lan_result

- debug:
    var: lan_result

### Set message
- debug:
    msg: "LAN connectivity working"
  ignore_errors: true
  when: lan_result['state'] == "started"

- set_fact:
    lan_ip_reachable: true
    cacheable: true
  when: lan_result['state'] == "started"
