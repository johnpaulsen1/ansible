---
### verify the gathered facts ####
### RHEL ####
- name: verify registration command - rhel physical - PROD
  shell: echo "activationkey = fnb_phys"{{ ansible_distribution_major_version }}"_prod will be used"
  when:
    - ansible_virtualization_type == "physical"
    - ansible_distribution == "RedHat"
    - server_role == "prod"

- name: verify registration command - rhel physical - NONPROD
  shell: echo "activationkey = fnb_phys"{{ ansible_distribution_major_version }}" will be used"
  when:
    - ansible_virtualization_type == "physical"
    - ansible_distribution == "RedHat"
    - server_role == "nonprod"

- name: verify registration command - rhel virtual - PROD
  shell: echo "activationkey = fnb_rhel"{{ ansible_distribution_major_version }}"_prod will be used"
  when:
    - ansible_virtualization_type == "VMware"
    - ansible_distribution == "RedHat"
    - server_role == "prod"

- name: verify registration command - rhel virtual - NONPROD
  shell: echo "activationkey = fnb_rhel"{{ ansible_distribution_major_version }}" will be used"
  when:
    - ansible_virtualization_type == "VMware"
    - ansible_distribution == "RedHat"
    - server_role == "nonprod"

- name: verify registration command - rhel virtualbox - PROD
  shell: echo "activationkey = fnb_rhel"{{ ansible_distribution_major_version }}"_prod will be used"
  when:
    - ansible_virtualization_type == "virtualbox"
    - ansible_distribution == "RedHat"
    - server_role == "prod"

- name: verify registration command - rhel virtualbox - NONPROD
  shell: echo "activationkey = fnb_rhel"{{ ansible_distribution_major_version }}" will be used"
  when:
    - ansible_virtualization_type == "virtualbox"
    - ansible_distribution == "RedHat"
    - server_role == "nonprod"

- name: verify registration command - rhel zLinux - PROD
  shell: echo "activationkey = fnbz"{{ ansible_distribution_major_version }}"_prod will be used"
  when:
    - ansible_distribution == "RedHat"
    - ansible_architecture == "s390x"
    - server_role == "prod"

- name: verify registration command - rhel zLinux - NONPROD
  shell: echo "activationkey = fnbz"{{ ansible_distribution_major_version }}" will be used"
  when:
    - ansible_distribution == "RedHat"
    - ansible_architecture == "s390x"
    - server_role == "nonprod"

### CentOS
- name: verify registration command - centOS virtual - PROD
  shell: echo "activationkey = fnb_centos"{{ ansible_distribution_major_version }}"_prod will be used"
  when:
    - ansible_virtualization_type == "VMware" or ansible_virtualization_type == "physical"
    - ansible_distribution == "CentOS"
    - server_role == "prod"

- name: verify registration command - centOS virtual - NONPROD
  shell: echo "activationkey = fnb_centos"{{ ansible_distribution_major_version }}" will be used"
  when:
    - ansible_virtualization_type == "VMware" or ansible_virtualization_type == "physical"
    - ansible_distribution == "CentOS"
    - server_role == "nonprod"

### prep
- name: download katello-ca-consumer
  get_url:
    url: "https://{{ item }}/pub/katello-ca-consumer-latest.noarch.rpm"
    dest: /tmp/katello-ca-consumer-latest.noarch.rpm
    validate_certs: no
  with_items:
    - "{{ subscription_host }}"

- name: install new katello-ca-consumer
  yum:
    name: /tmp/katello-ca-consumer-latest.noarch.rpm
    state: present

- name: remove proxy
  lineinfile:
    path: /etc/rhsm/rhsm.conf
    regexp: '-cobbler'
    state: absent

- name: remove yum proxy
  lineinfile:
    path: /etc/yum.conf
    regexp: '-cobbler'
    state: absent

- name: find repo files
  find:
   paths: /etc/yum.repos.d/
   patterns: '*.repo'
  register: files_to_delete

- name: clean repo files
  file:
    path: "{{ item.path }}"
    state: absent
  with_items:
    - "{{ files_to_delete.files }}"


- name: clean repos
  shell: yum clean all
  ignore_errors: true

- name: clean cache
  file:
    state: absent
    path: "{{ item }}"
  with_items:
     - /var/cache/yum/

- name: register
  include: register.yaml
